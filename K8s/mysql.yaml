apiVersion: apps/v1
kind: Deployment
metadata:
  name: alinedb
  labels:
    app: alinedb
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alinedb
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: alinedb
        tier: database
    spec:
      containers:
      - name: alinedb
        image: mysql:8.0.28
        ports:
        - containerPort: 3306
          name: alinedb
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aline-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: aline-secret
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: aline-secret
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: aline-secret
              key: MYSQL_PASSWORD
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: alinedb-persistance-storage
      volumes:
        - name: alinedb-persistance-storage
          persistentVolumeClaim:
            claimName: alinedb-pv-claim

---

apiVersion: v1
kind: Service
metadata:
  name: alinedb
  labels:
    app: alinedb
    tier: database
spec:
  selector:
    app: alinedb
    tier: database
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  clusterIP: None

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alinedb-pv-claim  # name of PVC essential for identifying the storage data
  labels:
    app: alinedb
    tier: database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.
